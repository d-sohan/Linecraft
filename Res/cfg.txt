S' -> PROGRAM
PROGRAM -> FUNC-DEFS
FUNC-DEFS -> FUNC-DEF
FUNC-DEFS -> FUNC-DEFS FUNC-DEF
FUNC-DEF -> RET-TYPE id ( PARAM-LIST ) { STMT-LIST }
RET-TYPE -> TYPE
RET-TYPE -> void
TYPE -> int
TYPE -> float
TYPE -> char
TYPE -> boolean
TYPE -> string
PARAM-LIST -> ''
PARAM-LIST -> PARAMS
PARAMS -> TYPE id
PARAMS -> TYPE id , PARAMS
STMT-LIST -> ''
STMT-LIST -> STMTS
STMTS -> STMT
STMTS -> STMTS STMT
STMT -> DECL ;
STMT -> ASSG ;
STMT -> IFEL
STMT -> LOOP
STMT -> EXPR ;
STMT -> RETS ;
DECL -> VDECL
DECL -> ADECL
VDECL -> TYPE V-ID-LIST
V-ID-LIST -> id
V-ID-LIST -> V-ID-LIST , id
V-ID-LIST -> id := EXPR
V-ID-LIST -> V-ID-LIST , id := EXPR
ADECL -> TYPE A-ID-LIST
A-ID-LIST -> id [ ARTH-EXPR ]
A-ID-LIST -> A-ID-LIST , id [ ARTH-EXPR ]
A-ID-LIST -> id [ ARTH-EXPR ] := [ EXPR-LIST ]
A-ID-LIST -> A-ID-LIST , id [ ARTH-EXPR ] := [ EXPR-LIST ]
EXPR-LIST -> EXPR
EXPR-LIST -> EXPR-LIST , EXPR
ASSG -> id := EXPR
ASSG -> id [ ARTH-EXPR ] := EXPR
IFEL -> if ( BOOL-EXPR ) { STMT-LIST }
IFEL -> if ( ARTH-EXPR ) { STMT-LIST }
IFEL -> if ( BOOL-EXPR ) { STMT-LIST } else { STMT-LIST }
IFEL -> if ( ARTH-EXPR ) { STMT-LIST } else { STMT-LIST }
LOOP -> while ( BOOL-EXPR ) { STMT-LIST }
LOOP -> while ( ARTH-EXPR ) { STMT-LIST }
RETS -> return EXPR
RETS -> return
EXPR -> BOOL-EXPR
EXPR -> ARTH-EXPR
EXPR -> charlit
EXPR -> strlit
BOOL-EXPR -> BOOL-TERM
BOOL-EXPR -> BOOL-EXPR && BOOL-TERM
BOOL-EXPR -> BOOL-EXPR || BOOL-TERM
BOOL-TERM -> BOOL-PRIMARY
BOOL-TERM -> ! BOOL-PRIMARY
BOOL-TERM -> ARTH-EXPR < ARTH-EXPR
BOOL-TERM -> ARTH-EXPR <= ARTH-EXPR
BOOL-TERM -> ARTH-EXPR = ARTH-EXPR
BOOL-TERM -> ARTH-EXPR != ARTH-EXPR
BOOL-TERM -> ARTH-EXPR >= ARTH-EXPR
BOOL-TERM -> ARTH-EXPR > ARTH-EXPR
BOOL-PRIMARY -> true 
BOOL-PRIMARY -> false 
BOOL-PRIMARY -> ( BOOL-EXPR )
ARTH-EXPR ->  ARTH-TERM
ARTH-EXPR ->  ARTH-EXPR + ARTH-TERM
ARTH-EXPR ->  ARTH-EXPR - ARTH-TERM
ARTH-TERM -> ARTH-PRIMARY
ARTH-TERM -> ARTH-TERM / ARTH-PRIMARY
ARTH-TERM -> ARTH-TERM * ARTH-PRIMARY
ARTH-TERM -> ARTH-TERM % ARTH-PRIMARY
ARTH-PRIMARY -> id
ARTH-PRIMARY -> ( ARTH-EXPR )
ARTH-PRIMARY -> FUNC-CALL
ARTH-PRIMARY -> ARR-SUB
ARTH-PRIMARY -> intlit
ARTH-PRIMARY -> floatlit
FUNC-CALL -> id ( EXPR )
FUNC-CALL -> id ( )
ARR-SUB -> id [ ARTH-EXPR ]